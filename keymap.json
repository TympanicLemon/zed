[
    // Normal and Visual mode
    {
        "context": "Editor && (vim_mode == normal || vim_mode == visual) && !VimWaiting && !menu",
        "bindings": {
            "g f": "editor::OpenExcerpts",
            "space f p": "projects::OpenRecent",
            "space f w": "pane::DeploySearch",
            "space g p": "editor::ToggleHunkDiff",
            "space g r": "editor::RevertSelectedHunks",
            "space m p": "markdown::OpenPreview",
            "space m P": "markdown::OpenPreviewToTheSide"
        }
    },

    // Normal mode
    {
        "context": "Editor && vim_mode == normal && !VimWaiting && !menu",
        "bindings": {
            "shift-h": "pane::ActivatePrevItem",
            "shift-l": "pane::ActivateNextItem",
            "g d": "editor::GoToDefinition",
            "g e": "editor::OpenExcerpts",
            "g i": "editor::GoToImplementation",
            "g r": "editor::FindAllReferences",
            "space v": "pane::SplitVertical",
            "space h": "pane::SplitHorizontal",
            "space a c": "assistant::ToggleFocus",
            "space b o": "pane::CloseInactiveItems",
            "space f f": "file_finder::Toggle",
            "space g d": "editor::ExpandAllHunkDiffs",
            "space g p": "editor::ToggleHunkDiff",
            "space g r": "editor::RevertSelectedHunks",
            "space l a": "editor::ToggleCodeActions",
            "space l f": "editor::Format",
            "space l r": "editor::Rename",
            "space p o": "workspace::Open",
            "space p r": "projects::OpenRecent",
            "space t i": "editor::ToggleInlayHints",
            "space t r": "task::Rerun",
            "space t s": "task::Spawn",
            "space t t": "workspace::ToggleBottomDock",
            "space x x": "diagnostics::Deploy",
            "space space": "file_finder::Toggle"
        }
    },

    // Visual mode
    {
        "context": "VimControl && !menu && !VimWaiting && vim_mode == visual",
        "bindings": {
            "a c": "assistant::QuoteSelection",
            "ctrl->": "vim::Indent",
            ">": ["workspace::SendKeystrokes", "ctrl-> g v"],
            "ctrl-<": "vim::Outdent",
            "<": ["workspace::SendKeystrokes", "ctrl-< g v"]
        }
    },

    // Insert mode
    {
        "context": "vim_mode == insert",
        "bindings": {
            "j k": "vim::NormalBefore"
        }
    },

    // Editor
    {
        "context": "Workspace",
        "bindings": {
            "cmd-1": "workspace::ToggleLeftDock",
            "cmd-2": "workspace::ToggleRightDock",
            "cmd-`": "workspace::ToggleBottomDock"
        }
    },

    // Filetree keymaps
    {
        "context": "ProjectPanel && not_editing",
        "bindings": {
            "a": "project_panel::NewFile",
            "d": "project_panel::Delete",
            "r": "project_panel::Rename",
            "A": "project_panel::NewDirectory"
        }
    },

    // MISC
    {
        "context": "VimControl && !menu || Dock",
        "bindings": {
            "ctrl-h": ["workspace::ActivatePaneInDirection", "Left"],
            "ctrl-l": ["workspace::ActivatePaneInDirection", "Right"],
            "ctrl-k": ["workspace::ActivatePaneInDirection", "Up"],
            "ctrl-j": ["workspace::ActivatePaneInDirection", "Down"]
        }
    },
    {
        "context": "VimControl && !menu || ProjectPanel",
        "bindings": {
            "space e": "workspace::ToggleLeftDock"
        }
    },
    {
        "context": "EmptyPane || SharedScreen",
        "bindings": {
            "space e": "workspace::ToggleLeftDock",
            "space a c": "assistant::ToggleFocus",
            "space p o": "workspace::Open",
            "space p r": "projects::OpenRecent",
            "space t t": "workspace::ToggleBottomDock",
            "space space": "file_finder::Toggle"
        }
    },
    {
        "context": "Editor && (showing_code_actions || showing_completions)",
        "bindings": {
            "ctrl-k": "editor::ContextMenuPrev",
            "ctrl-j": "editor::ContextMenuNext"
        }
    }
]
